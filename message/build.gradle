plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.graalvm.buildtools.native' version '0.10.2'
    id 'com.diffplug.spotless' version '6.25.0'
    id "io.sentry.jvm.gradle" version "4.11.0"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
}

group = 'io.message'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
}

spotless {
    java {
        googleJavaFormat().aosp()
        removeUnusedImports()
        importOrder()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.modulith:spring-modulith-bom:1.2.3'
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // https://docs.spring.io/spring-data/cassandra/reference/cassandra/getting-started.html
    implementation 'org.springframework.data:spring-data-cassandra'

    // Spring Kafka
    // https://docs.spring.io/spring-kafka/reference/quick-tour.html
    implementation 'org.springframework.kafka:spring-kafka:3.2.0'
    implementation 'io.projectreactor.kafka:reactor-kafka'

    // MapStruct
    // https://mapstruct.org/documentation/installation/
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Elasticsearch
    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch
    implementation 'org.springframework.data:spring-data-elasticsearch:5.3.2'

    // Modulith
    implementation 'org.springframework.modulith:spring-modulith-starter-test'

    // Actuator & Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // TSID
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.8.2'

    // Avro
    // https://mvnrepository.com/artifact/org.apache.avro/avro
    implementation group: 'org.apache.avro', name: 'avro', version: '1.12.0'

    // AutoParams
    testImplementation 'io.github.autoparams:autoparams:8.3.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = true

    org = "youn-qp"
    projectName = "java-spring-boot"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

tasks.named('generateAvroJava') {
    dependsOn 'generateSentryBundleIdJava'
}
